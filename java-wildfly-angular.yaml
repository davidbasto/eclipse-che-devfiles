apiVersion: 1.0.0
metadata:
  name: java-wildfly
projects:
  - name: backend-app-teste
    source:
      location: 'https://github.com/davidbasto/backend-app-teste.git'
      startPoint: main
      type: git
  - name: frontend-app-teste
    source:
      location: 'https://github.com/davidbasto/frontend-app-teste.git'
      startPoint: angular-11
      type: git
components:
  - id: redhat/java11/latest
    type: chePlugin
  - id: vscode/typescript-language-features/latest
    type: chePlugin
    registryUrl: 'https://eclipse-che.github.io/che-plugin-registry/7.38.0/v3/'
  - mountSources: true
    endpoints:
      - name: wildfly-http
        port: 8080
      - name: wildfly-managament
        port: 9990
    memoryLimit: 1512Mi
    type: dockerimage
    volumes:
      - name: m2-repository
        containerPath: /home/jboss/.m2/repository
    alias: wildfly
    image: 'quay.io/wildfly/wildfly-centos7:25.0'
    env:
      - value: '256'
        name: GC_MAX_METASPACE_SIZE
      - value: '96'
        name: GC_METASPACE_SIZE
      - value: 'jaxrs-server,microprofile-platform'
        name: GALLEON_PROVISION_LAYERS
      - value: 'false'
        name: S2I_DELETE_SOURCE
      - value: '-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n -Dsun.util.logging.disableCallerCheck=true'
        name: JAVA_OPTS_APPEND
      - value: '-s /home/jboss/.m2/settings.xml -Dmaven.repo.local=/home/jboss/.m2/repository -Dcom.redhat.xpaas.repo.jbossorg'
        name: MVN_ARGS_APPEND
      - value: /projects
        name: S2I_DESTINATION_DIR
  - mountSources: true
    endpoints:
      - name: angular
        port: 4200
    memoryLimit: 2Gi
    type: dockerimage
    alias: nodejs
    image: 'quay.io/eclipse/che-nodejs10-community:7.37.2'
commands:
  - name: Compile and package the application
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/backend-app-teste'
        type: exec
        command: 'source ${JBOSS_CONTAINER_MAVEN_DEFAULT_MODULE}/scl-enable-maven && mvn ${MVN_ARGS_APPEND} -Dmaven.test.skip=true clean package'
        component: wildfly
  - name: Copy application artifact
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/backend-app-teste'
        type: exec
        command: cp target/*.war $JBOSS_HOME/standalone/deployments/ROOT.war
        component: wildfly
  - name: start
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/frontend-app-teste'
        type: exec
        command: npm run start --host 0.0.0.0 --disableHostCheck true
        component: nodejs
  - name: Launch WildFly Server
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/backend-app-teste'
        type: exec
        command: cp -f $STANDALONE_RESTORE/standalone.xml $JBOSS_HOME/standalone/configuration/standalone.xml&& $JBOSS_HOME/bin/openshift-launch.sh
        component: wildfly
  - name: npm install
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/frontend-app-teste'
        type: exec
        command: npm install
        component: nodejs
  - name: build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/frontend-app-teste'
        type: exec
        command: npm run build
        component: nodejs
